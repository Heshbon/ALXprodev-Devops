#!/bin/bash

POKEMON_LIST=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")
API_BASE="https://pokeapi.co/api/v2/pokemon/"
DATA_DIR="pokemon_data"
ERROR_LOG="pokemon_errors.log"

# Output directory
mkdir -p "$DATA_DIR"
: > "$ERROR_LOG"

# Fetch and save PokÃ©mon data
fetch_pokemon() {
    local pokemon=$1
    local url="${API_BASE}${pokemon}"
    local output_file="${DATA_DIR}/${pokemon}.json"

    echo "Fetching data for ${pokemon}..."

    if curl -s -f "$url" -o "$output_file"; then
        echo "Saved data to ${output_file}"
        return 0
    else
        echo "Failed to fetch ${pokemon}"
        echo "$(date): Failed to fetch ${pokemon}" >> "$ERROR_LOG"
        return 1
    fi
}

# Parallel background jobs
export -f fetch_pokemon
export API_BASE DATA_DIR ERROR_LOG

# Fetch operations in parallel
pids=()
for pokemon in "${POKEMON_LIST[@]}"; do
    fetch_pokemon "$pokemon" &
    pids+=($!)
done

# Background processes
for pid in "${pids[@]}"; do
    wait "$pid"
done

kill -0 $$ 2>/dev/null

# Error log
if [ -s "$ERROR_LOG" ]; then
    echo -e "\nError Summary:"
    cat "$ERROR_LOG"
fi