#!/bin/bash

POKEMON_LIST=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")
API_BASE="https://pokeapi.co/api/v2/pokemon/"
DATA_DIR="pokemon_data"
ERROR_LOG="pokemon_errors.log"
TIMEOUT=8

# Output directory
mkdir -p "$DATA_DIR"
: > "$ERROR_LOG"

# Fetch and save PokÃ©mon data
fetch_pokemon() {
    local pokemon=$1
    local url="${API_BASE}${pokemon}"
    local output_file="${DATA_DIR}/${pokemon}.json"

    curl -s -f "$url" -o "$output_file" && echo "Saved data for ${pokemon}" || {
        echo "Failed to fetch ${pokemon}"
        echo "$(date): Failed to fetch ${pokemon}" >> "$ERROR_LOG"
    }
}

# Background processes
declare -A pid_map

for pokemon in "${POKEMON_LIST[@]}"; do
    fetch_pokemon "$pokemon" &
    pid_map[$!]=$pokemon
done

# Kill timeout
for pid in "${!pid_map[@]}"; do
    timeout=$TIMEOUT
    while kill -0 "$pid" 2>/dev/null && [ $timeout -gt 0 ]; do
        sleep 1
        ((timeout--))
    done

    if kill -0 "$pid" 2>/dev/null; then
        echo "Killing delayed fetch for ${pid_map[$pid]}"
        kill "$pid"
        echo "$(date): Killed delayed fetch for ${pid_map[$pid]}" >> "$ERROR_LOG"
    else
        wait "$pid"
    fi
done

# Error log
if [ -s "$ERROR_LOG" ]; then
    echo -e "\nError Summary:"
    cat "$ERROR_LOG"
fi